/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {  } from 'react'
import { useGLTF } from '@react-three/drei';
import ResettableRigidBody from './ResettableRigidBody';

export default function BedroomTest({ ...props }) {
    const { nodes, materials } = useGLTF('/BedroomTest-transformed.glb');

    return (
        <>
            {/* <ResettableRigidBody
                needsReset={props.resetList["box"]}
                id="box"
                rbHasReset={props.rbHasReset}
                colliders="hull" 
                type="dynamic"
            >
                <mesh 
                    geometry={nodes.Floor.geometry} 
                    material={materials.Wood} 
                    scale={[1.99, 0.1, 1.99]} 
                />
                </mesh>
            </ResettableRigidBody> */}
            <ResettableRigidBody
                needsReset={props.resetList["pillow1"]}
                id="pillow1"
                rbHasReset={props.rbHasReset}
                colliders="cuboid" 
                type="dynamic"
            >
                <mesh 
                    geometry={nodes.Pillow_1.geometry} 
                    material={materials.Pillow} 
                    position={[0, 1.5, 0.51]} 
                    rotation={[0, 0.03, 0]} 
                    scale={1.25} 
                />
            </ResettableRigidBody>
            <ResettableRigidBody
                needsReset={props.resetList["pillow2"]}
                id="pillow2"
                rbHasReset={props.rbHasReset}
                colliders="cuboid" 
                type="dynamic"
            >
                <mesh 
                    geometry={nodes.Pillow_2.geometry} 
                    material={materials.Pillow} 
                    position={[0, 1.5, -0.31]} 
                    rotation={[0, 0.03, 0]} 
                    scale={1.25} 
                />
            </ResettableRigidBody>
            <ResettableRigidBody
                needsReset={props.resetList["bed"]}
                id="bed"
                rbHasReset={props.rbHasReset}
                colliders="hull" 
                type="dynamic"
            >
                <mesh 
                    geometry={nodes.BedFrame.geometry} 
                    material={materials['Wood Bed']}
                />
                <group scale={[1.03, 1, 1.08]}>
                    <mesh 
                        geometry={nodes.Cube003.geometry} 
                        material={materials.Mattress} 
                    />
                    <mesh 
                        geometry={nodes.Cube003_1.geometry} 
                        material={materials['Mattress Folded']} 
                    />
                </group>
            </ResettableRigidBody>
        </>
    )
}

useGLTF.preload('/BedroomTest-transformed.glb');
